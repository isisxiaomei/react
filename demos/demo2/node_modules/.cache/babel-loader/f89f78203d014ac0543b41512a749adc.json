{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nvar _jsxFileName = \"/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/echarts/bar/index.js\";\nimport React from 'react';\n// export default class Bar extends React.Component{\n//     say(){\n//         console.log(\"1: \",this)\n//         setTimeout(() => {\n//             console.log(\"settimeSay: \", this)\n//         }, 1000);\n//     }\n//     show = ()=>{\n//         console.log(\"2: \", this)\n//         setTimeout(() => {\n//             console.log(\"settimeShow: \", this)\n//         }, 1000);\n//         var aa = {\n//             bb: function (){\n//                 console.log(\"3: \",this)\n//                 setTimeout(() => {\n//                     console.log(\"aa: \", this)\n//                 }, 1000);\n//             }\n//         }\n//         aa.bb();\n//     }\n// }\n// 按需加载\nimport echarts from 'echarts/lib/echarts'; // 导入柱形图\n\nimport 'echarts/lib/chart/bar'; // 引入提示框和标题组件\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\nimport ReactEcharts from 'echarts-for-react';\nimport echartsTheme from '../echartsTheme';\nexport default class Bar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOption2 = () => {\n      let option = {\n        title: {\n          text: '用户骑行订单'\n        },\n        legend: {\n          // 柱状图这里的data和series的数据项name关联起来才会展示；饼图不一样，具体看文档\n          data: ['OFO', '摩拜', '小蓝']\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        // x轴\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        // y轴\n        yAxis: {\n          type: 'value'\n        },\n        // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n        series: [{\n          name: 'OFO',\n          // type用于控制是什么形状的图\n          type: 'bar',\n          data: [10, 52, 200, 334, 390, 330, 220]\n        }, {\n          name: '摩拜',\n          type: 'bar',\n          data: [100, 10, 200, 500, 600, 700, 100]\n        }, {\n          name: '小蓝',\n          type: 'bar',\n          data: [120, 520, 250, 300, 330, 400, 100]\n        }]\n      };\n      return option;\n    };\n\n    this.getOption = () => {\n      let option = {\n        title: {\n          text: '用户骑行订单'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // 坐标轴指示器，坐标轴触发有效\n            type: 'shadow' // 默认为直线，可选为：'line' | 'shadow'\n\n          }\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        // x轴\n        xAxis: {\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n        },\n        // y轴\n        yAxis: {\n          type: 'value'\n        },\n        // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n        series: [{\n          type: 'bar',\n          data: [10, 52, 200, 334, 390, 330, 220]\n        }]\n      };\n      return option;\n    };\n  }\n\n  componentWillMount() {\n    // 这里使用官方主题所以option里面不要再配置color\n    echarts.registerTheme('infographic', echartsTheme);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u67F1\\u5F62\\u56FE1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactEcharts, {\n      option: this.getOption(),\n      theme: \"infographic\",\n      style: {\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u67F1\\u5F62\\u56FE2\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactEcharts, {\n      option: this.getOption2(),\n      theme: \"infographic\",\n      style: {\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/echarts/bar/index.js"],"names":["React","echarts","ReactEcharts","echartsTheme","Bar","Component","getOption2","option","title","text","legend","data","tooltip","trigger","axisPointer","type","grid","left","right","bottom","containLabel","xAxis","yAxis","series","name","getOption","componentWillMount","registerTheme","render","height","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Card} from 'antd'\n// export default class Bar extends React.Component{\n//     say(){\n//         console.log(\"1: \",this)\n//         setTimeout(() => {\n//             console.log(\"settimeSay: \", this)\n//         }, 1000);\n//     }\n//     show = ()=>{\n//         console.log(\"2: \", this)\n//         setTimeout(() => {\n//             console.log(\"settimeShow: \", this)\n//         }, 1000);\n//         var aa = {\n//             bb: function (){\n//                 console.log(\"3: \",this)\n//                 setTimeout(() => {\n//                     console.log(\"aa: \", this)\n//                 }, 1000);\n//             }\n//         }\n//         aa.bb();\n//     }\n// }\n\n\n\n// 按需加载\nimport echarts from 'echarts/lib/echarts'\n// 导入柱形图\nimport 'echarts/lib/chart/bar'\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/markPoint'\nimport ReactEcharts from 'echarts-for-react'\nimport echartsTheme from '../echartsTheme'\n\nexport default class Bar extends React.Component{\n\n    componentWillMount(){\n        // 这里使用官方主题所以option里面不要再配置color\n        echarts.registerTheme('infographic', echartsTheme);\n    }\n\n\n    getOption2 = ()=>{\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            legend: {\n                // 柱状图这里的data和series的数据项name关联起来才会展示；饼图不一样，具体看文档\n                data: ['OFO', '摩拜', '小蓝'],\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            grid: {\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                containLabel: true\n            },\n            // x轴\n            xAxis: {\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n\n            // y轴\n            yAxis: {\n                type: 'value'\n            },\n\n            // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n            series: [\n                {\n                    name: 'OFO',\n                    // type用于控制是什么形状的图\n                    type: 'bar',\n                    data: [10, 52, 200, 334, 390, 330, 220]\n                },\n                {\n                    name: '摩拜',\n                    type: 'bar',\n                    data: [100, 10, 200, 500, 600, 700, 100]\n                },\n                {\n                    name: '小蓝',\n                    type: 'bar',\n                    data: [120, 520, 250, 300, 330, 400, 100]\n                }\n            ]\n        }\n        return option\n    }\n    getOption = ()=>{\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {            // 坐标轴指示器，坐标轴触发有效\n                    type: 'shadow'        // 默认为直线，可选为：'line' | 'shadow'\n                }\n            },\n            grid: {\n                left: '3%',\n                right: '4%',\n                bottom: '3%',\n                containLabel: true\n            },\n            // x轴\n            xAxis: {\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n\n            // y轴\n            yAxis: {\n                type: 'value'\n            },\n\n            // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n            series: [\n                {\n                    type: 'bar',\n                    data: [10, 52, 200, 334, 390, 330, 220]\n                }\n            ]\n        }\n        return option\n    }\n    render(){\n        return(\n        <div>\n            <Card title=\"柱形图1\" >\n                {/*  theme：infographic关联导入的 echarts.registerTheme('infographic', echartsTheme);*/}\n                <ReactEcharts option={this.getOption()} theme=\"infographic\" style={{height: 500}}/>\n            </Card>\n            <Card title=\"柱形图2\" style={{ marginTop: 10 }}>\n                <ReactEcharts option={this.getOption2()} theme=\"infographic\" style={{height: 500}}/>\n            </Card>\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}