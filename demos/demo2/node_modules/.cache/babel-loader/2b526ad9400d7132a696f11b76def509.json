{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/table/style\";\nimport _Table from \"antd/lib/table\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nvar _jsxFileName = \"/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/table/basicTable.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Axios from '../../axios/index';\nimport Utils from '../../utils/utils';\n\nclass BasicTable extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.params = {\n      page: 1\n    };\n\n    this.request = () => {\n      let _this = this;\n\n      Axios.ajax({\n        url: '/demo/mock/table/list',\n        data: {\n          params: {\n            page: this.params.page\n          }\n        }\n      }).then(res => {\n        res.result.list.map((item, index) => {\n          item.key = index;\n        });\n        this.setState({\n          dataSource1: res.result.list,\n          selectedRowKeys: [],\n          selectedRows: null,\n          pagination: Utils.pagination(res, current => {\n            _this.params.page = current;\n            this.request();\n          })\n        });\n      });\n    };\n\n    this.onRowClick = (record, index) => {\n      let selectKeys = [index];\n      this.setState({\n        selectedRowKeys: selectKeys,\n        selectItem: record\n      });\n    };\n\n    this.handleDelete = () => {\n      let {\n        selectedRows\n      } = this.state;\n      let ids = [];\n      selectedRows.map(item => {\n        ids.push(item.id);\n      });\n\n      _Modal.confirm({\n        title: \"删除提示\",\n        content: `确定要删除${ids}`,\n        onOk: () => {\n          _message.success('删除成功');\n\n          this.request();\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    const columns = [{\n      title: 'id',\n      dataIndex: 'id'\n    }, {\n      title: '用户名',\n      dataIndex: 'userName'\n    }, {\n      title: '性别',\n      dataIndex: 'sex',\n      render: sex => {\n        return sex == 1 ? '男' : '女';\n      }\n    }, {\n      title: '状态',\n      dataIndex: 'state',\n      render: state => {\n        let config = {\n          '1': '在线',\n          '2': '离开',\n          '3': '忙碌'\n        };\n        return config[state];\n      }\n    }, {\n      title: '爱好',\n      dataIndex: 'interest',\n      render: interest => {\n        let config = {\n          '1': '游泳',\n          '2': '篮球',\n          '3': '棒球'\n        };\n        return config[interest];\n      }\n    }, {\n      title: '生日',\n      dataIndex: 'birthday'\n    }, {\n      title: '地址',\n      dataIndex: 'address'\n    }, {\n      title: '早起时间',\n      dataIndex: 'time'\n    }];\n    const dataSource = [{\n      id: \"0\",\n      userName: 'jack',\n      sex: '1',\n      state: '1',\n      interest: 1,\n      birthday: '2000-00-00',\n      address: '北京市海淀区',\n      time: '09:00'\n    }, {\n      id: \"1\",\n      userName: 'john',\n      sex: '1',\n      state: '1',\n      interest: 2,\n      birthday: '2000-00-00',\n      address: '北京市海淀区',\n      time: '09:00'\n    }, {\n      id: \"2\",\n      userName: 'Bob',\n      sex: '1',\n      state: '1',\n      interest: 3,\n      birthday: '2000-00-00',\n      address: '北京市海淀区',\n      time: '09:00'\n    }];\n    dataSource.map((item, index) => {\n      item.key = index;\n    });\n    this.setState({\n      columns,\n      dataSource\n    });\n    this.request();\n  } // 基本使用\n  // request = () => {\n  //     let baseUrl = `http://yapi.demo.qunar.com/mock/80318`\n  //     axios.get(`${baseUrl}/demo/mock/table/list`)\n  //     .then(response => {\n  //         if (response.status == '200' && response.data.code == 0){\n  //             this.setState({\n  //                 dataSource1: response.data.result\n  //             })\n  //         }\n  //     }).catch( (error) => {\n  //         message.error(error.msg);\n  //     })\n  // }\n  // axios包装\n\n\n  render() {\n    // selectedRowKeys表示所选中行的key数组，这里是从onRow事件中获取然后存储到state中\n    const {\n      selectedRowKeys\n    } = this.state; // 当onRow点击行选中时，只有给table设置了selectedRowKeys，按钮才会展示选中的行\n\n    let rowSelection = {\n      type: 'radio',\n      selectedRowKeys\n    };\n    let rowCheckSelection = {\n      type: 'checkbox',\n      selectedRowKeys,\n      onChange: (selectedRowKeys, selectedRows) => {\n        this.setState({\n          selectedRowKeys,\n          selectedRows\n        });\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u57FA\\u7840\\u8868\\u683C\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      columns: this.state.columns,\n      dataSource: this.state.dataSource,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u52A8\\u6001\\u6570\\u636E\\u6E32\\u67D3\\u8868\\u683C-mock\",\n      style: {\n        margin: \"10px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      columns: this.state.columns,\n      dataSource: this.state.dataSource1,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      title: \"mock-\\u5355\\u9009\",\n      style: {\n        margin: \"10px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      bordered: true,\n      columns: this.state.columns,\n      dataSource: this.state.dataSource1,\n      rowSelection: rowSelection,\n      onRow: (record, index) => {\n        return {\n          onClick: () => {\n            this.onRowClick(record, index);\n          }\n        };\n      },\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      title: \"mock-\\u590D\\u9009\",\n      style: {\n        margin: \"10px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, \"\\u5220\\u9664\")), /*#__PURE__*/React.createElement(_Table, {\n      bordered: true,\n      columns: this.state.columns,\n      dataSource: this.state.dataSource1,\n      rowSelection: rowCheckSelection,\n      pagination: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      title: \"mock-\\u5206\\u9875\\u5C01\\u88C5\",\n      style: {\n        margin: \"10px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Table, {\n      bordered: true,\n      columns: this.state.columns,\n      dataSource: this.state.dataSource1,\n      pagination: this.state.pagination,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default BasicTable; // rowSelection：  rowSelection 表格行是否可选择，配置项\n// selectedRowKeys: 告诉table当前选中了哪些行，同时table展示勾选被选中的行\n// onRow： 表示鼠标点击行的时候也可以选中当前行（默认情况下只能点击checkbox框才能选中）\n// pagination封装：第二个参数是回调函数，好好体会下","map":{"version":3,"sources":["/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/table/basicTable.js"],"names":["React","Component","axios","Axios","Utils","BasicTable","state","params","page","request","_this","ajax","url","data","then","res","result","list","map","item","index","key","setState","dataSource1","selectedRowKeys","selectedRows","pagination","current","onRowClick","record","selectKeys","selectItem","handleDelete","ids","push","id","confirm","title","content","onOk","success","componentWillMount","columns","dataIndex","render","sex","config","interest","dataSource","userName","birthday","address","time","rowSelection","type","rowCheckSelection","onChange","margin","onClick","marginBottom"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BK,KAD+B,GACvB,EADuB;AAAA,SAE/BC,MAF+B,GAEtB;AACLC,MAAAA,IAAI,EAAE;AADD,KAFsB;;AAAA,SAoH/BC,OApH+B,GAoHrB,MAAK;AACX,UAAIC,KAAK,GAAG,IAAZ;;AACAP,MAAAA,KAAK,CAACQ,IAAN,CAAW;AACPC,QAAAA,GAAG,EAAE,uBADE;AAEPC,QAAAA,IAAI,EAAE;AACFN,UAAAA,MAAM,EAAE;AACJC,YAAAA,IAAI,EAAE,KAAKD,MAAL,CAAYC;AADd;AADN;AAFC,OAAX,EAOGM,IAPH,CAOQC,GAAG,IAAI;AACXA,QAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjCD,UAAAA,IAAI,CAACE,GAAL,GAAWD,KAAX;AACH,SAFD;AAGA,aAAKE,QAAL,CAAc;AACVC,UAAAA,WAAW,EAAER,GAAG,CAACC,MAAJ,CAAWC,IADd;AAEVO,UAAAA,eAAe,EAAE,EAFP;AAGVC,UAAAA,YAAY,EAAE,IAHJ;AAIVC,UAAAA,UAAU,EAAEtB,KAAK,CAACsB,UAAN,CAAiBX,GAAjB,EAAuBY,OAAD,IAAW;AACzCjB,YAAAA,KAAK,CAACH,MAAN,CAAaC,IAAb,GAAoBmB,OAApB;AACA,iBAAKlB,OAAL;AACH,WAHW;AAJF,SAAd;AASH,OApBD;AAqBH,KA3I8B;;AAAA,SA6I/BmB,UA7I+B,GA6IlB,CAACC,MAAD,EAAST,KAAT,KAAmB;AAC5B,UAAIU,UAAU,GAAG,CAACV,KAAD,CAAjB;AACA,WAAKE,QAAL,CAAc;AACVE,QAAAA,eAAe,EAAEM,UADP;AAEVC,QAAAA,UAAU,EAAEF;AAFF,OAAd;AAIH,KAnJ8B;;AAAA,SAoJ/BG,YApJ+B,GAoJhB,MAAM;AACjB,UAAI;AAACP,QAAAA;AAAD,UAAiB,KAAKnB,KAA1B;AACA,UAAI2B,GAAG,GAAG,EAAV;AACAR,MAAAA,YAAY,CAACP,GAAb,CAAkBC,IAAD,IAAQ;AACrBc,QAAAA,GAAG,CAACC,IAAJ,CAASf,IAAI,CAACgB,EAAd;AACH,OAFD;;AAGA,aAAMC,OAAN,CAAc;AACVC,QAAAA,KAAK,EAAE,MADG;AAEVC,QAAAA,OAAO,EAAG,QAAOL,GAAI,EAFX;AAGVM,QAAAA,IAAI,EAAE,MAAM;AACR,mBAAQC,OAAR,CAAgB,MAAhB;;AACA,eAAK/B,OAAL;AACH;AANS,OAAd;AAQH,KAlK8B;AAAA;;AAK/BgC,EAAAA,kBAAkB,GAAG;AACjB,UAAMC,OAAO,GAAG,CACZ;AACIL,MAAAA,KAAK,EAAE,IADX;AAEIM,MAAAA,SAAS,EAAE;AAFf,KADY,EAKZ;AACIN,MAAAA,KAAK,EAAE,KADX;AAEIM,MAAAA,SAAS,EAAE;AAFf,KALY,EASZ;AACIN,MAAAA,KAAK,EAAE,IADX;AAEIM,MAAAA,SAAS,EAAE,KAFf;AAGIC,MAAAA,MAAM,EAAGC,GAAD,IAAQ;AACZ,eAAOA,GAAG,IAAE,CAAL,GAAS,GAAT,GAAe,GAAtB;AACH;AALL,KATY,EAgBZ;AACIR,MAAAA,KAAK,EAAE,IADX;AAEIM,MAAAA,SAAS,EAAE,OAFf;AAGIC,MAAAA,MAAM,EAAGtC,KAAD,IAAU;AACd,YAAIwC,MAAM,GAAG;AACT,eAAK,IADI;AAET,eAAK,IAFI;AAGT,eAAK;AAHI,SAAb;AAKA,eAAOA,MAAM,CAACxC,KAAD,CAAb;AACH;AAVL,KAhBY,EA4BZ;AACI+B,MAAAA,KAAK,EAAE,IADX;AAEIM,MAAAA,SAAS,EAAE,UAFf;AAGIC,MAAAA,MAAM,EAAGG,QAAD,IAAa;AACjB,YAAID,MAAM,GAAG;AACT,eAAK,IADI;AAET,eAAK,IAFI;AAGT,eAAK;AAHI,SAAb;AAKA,eAAOA,MAAM,CAACC,QAAD,CAAb;AACH;AAVL,KA5BY,EAwCZ;AACIV,MAAAA,KAAK,EAAE,IADX;AAEIM,MAAAA,SAAS,EAAE;AAFf,KAxCY,EA4CZ;AACIN,MAAAA,KAAK,EAAE,IADX;AAEIM,MAAAA,SAAS,EAAE;AAFf,KA5CY,EAgDZ;AACIN,MAAAA,KAAK,EAAE,MADX;AAEIM,MAAAA,SAAS,EAAE;AAFf,KAhDY,CAAhB;AAqDA,UAAMK,UAAU,GAAG,CACf;AACIb,MAAAA,EAAE,EAAE,GADR;AAEIc,MAAAA,QAAQ,EAAE,MAFd;AAGIJ,MAAAA,GAAG,EAAE,GAHT;AAIIvC,MAAAA,KAAK,EAAE,GAJX;AAKIyC,MAAAA,QAAQ,EAAE,CALd;AAMIG,MAAAA,QAAQ,EAAE,YANd;AAOIC,MAAAA,OAAO,EAAE,QAPb;AAQIC,MAAAA,IAAI,EAAE;AARV,KADe,EAWf;AACIjB,MAAAA,EAAE,EAAE,GADR;AAEIc,MAAAA,QAAQ,EAAE,MAFd;AAGIJ,MAAAA,GAAG,EAAE,GAHT;AAIIvC,MAAAA,KAAK,EAAE,GAJX;AAKIyC,MAAAA,QAAQ,EAAE,CALd;AAMIG,MAAAA,QAAQ,EAAE,YANd;AAOIC,MAAAA,OAAO,EAAE,QAPb;AAQIC,MAAAA,IAAI,EAAE;AARV,KAXe,EAqBf;AACIjB,MAAAA,EAAE,EAAE,GADR;AAEIc,MAAAA,QAAQ,EAAE,KAFd;AAGIJ,MAAAA,GAAG,EAAE,GAHT;AAIIvC,MAAAA,KAAK,EAAE,GAJX;AAKIyC,MAAAA,QAAQ,EAAE,CALd;AAMIG,MAAAA,QAAQ,EAAE,YANd;AAOIC,MAAAA,OAAO,EAAE,QAPb;AAQIC,MAAAA,IAAI,EAAE;AARV,KArBe,CAAnB;AAgCAJ,IAAAA,UAAU,CAAC9B,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC5BD,MAAAA,IAAI,CAACE,GAAL,GAAWD,KAAX;AACH,KAFD;AAGA,SAAKE,QAAL,CAAc;AACVoB,MAAAA,OADU;AAEVM,MAAAA;AAFU,KAAd;AAKA,SAAKvC,OAAL;AACH,GApG8B,CAqG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAgDAmC,EAAAA,MAAM,GAAG;AACL;AACA,UAAM;AAACpB,MAAAA;AAAD,QAAoB,KAAKlB,KAA/B,CAFK,CAIL;;AACA,QAAI+C,YAAY,GAAG;AACfC,MAAAA,IAAI,EAAE,OADS;AAEf9B,MAAAA;AAFe,KAAnB;AAIA,QAAI+B,iBAAiB,GAAG;AACpBD,MAAAA,IAAI,EAAE,UADc;AAEpB9B,MAAAA,eAFoB;AAGpBgC,MAAAA,QAAQ,EAAE,CAAChC,eAAD,EAAkBC,YAAlB,KAAmC;AACzC,aAAKH,QAAL,CAAc;AACVE,UAAAA,eADU;AAEVC,UAAAA;AAFU,SAAd;AAIH;AARmB,KAAxB;AAWA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,KAAK,EAAC,0BAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWoC,OADxB;AAEI,MAAA,UAAU,EAAE,KAAKpC,KAAL,CAAW0C,UAF3B;AAGI,MAAA,UAAU,EAAE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAQI;AAAM,MAAA,KAAK,EAAC,uDAAZ;AAA4B,MAAA,KAAK,EAAE;AAAES,QAAAA,MAAM,EAAE;AAAV,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,OAAO,EAAE,KAAKnD,KAAL,CAAWoC,OADxB;AAEI,MAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWiB,WAF3B;AAGI,MAAA,UAAU,EAAE,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,eAeI;AAAM,MAAA,KAAK,EAAC,mBAAZ;AAAsB,MAAA,KAAK,EAAE;AAAEkC,QAAAA,MAAM,EAAE;AAAV,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,OAAO,EAAE,KAAKnD,KAAL,CAAWoC,OAFxB;AAGI,MAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWiB,WAH3B;AAII,MAAA,YAAY,EAAE8B,YAJlB;AAKI,MAAA,KAAK,EAAG,CAACxB,MAAD,EAAST,KAAT,KAAmB;AACvB,eAAO;AACLsC,UAAAA,OAAO,EAAE,MAAM;AACX,iBAAK9B,UAAL,CAAgBC,MAAhB,EAAwBT,KAAxB;AACH;AAHI,SAAP;AAKH,OAXL;AAYI,MAAA,UAAU,EAAE,KAZhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfJ,eA+BI;AAAM,MAAA,KAAK,EAAC,mBAAZ;AAAsB,MAAA,KAAK,EAAE;AAAEqC,QAAAA,MAAM,EAAE;AAAV,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAE;AAAGE,QAAAA,YAAY,EAAE;AAAjB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,IAAI,EAAC,SAAb;AACI,MAAA,OAAO,EAAI,KAAK3B,YADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,eAQI;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,OAAO,EAAE,KAAK1B,KAAL,CAAWoC,OAFxB;AAGI,MAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWiB,WAH3B;AAII,MAAA,YAAY,EAAEgC,iBAJlB;AAKI,MAAA,UAAU,EAAE,KALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CA/BJ,eA+CI;AAAM,MAAA,KAAK,EAAC,+BAAZ;AAAwB,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAE;AAAV,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,OAAO,EAAE,KAAKnD,KAAL,CAAWoC,OAFxB;AAGI,MAAA,UAAU,EAAE,KAAKpC,KAAL,CAAWiB,WAH3B;AAII,MAAA,UAAU,EAAE,KAAKjB,KAAL,CAAWoB,UAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA/CJ,CADJ;AA0DH;;AAjP8B;;AAsPnC,eAAerB,UAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\nimport { Card, Table, message, Checkbox, Button, Modal, } from 'antd';\nimport axios from 'axios'\nimport Axios from '../../axios/index'\nimport Utils from '../../utils/utils'\n\nclass BasicTable extends Component {\n    state = {};\n    params = {\n        page: 1\n    };\n    componentWillMount() {\n        const columns = [\n            {\n                title: 'id',\n                dataIndex: 'id'\n            },\n            {\n                title: '用户名',\n                dataIndex: 'userName'\n            },\n            {\n                title: '性别',\n                dataIndex: 'sex',\n                render: (sex)=> {\n                    return sex==1 ? '男' : '女'\n                }\n            },\n            {\n                title: '状态',\n                dataIndex: 'state',\n                render: (state)=> {\n                    let config = {\n                        '1': '在线',\n                        '2': '离开',\n                        '3': '忙碌',\n                    };\n                    return config[state];\n                }\n            },\n            {\n                title: '爱好',\n                dataIndex: 'interest',\n                render: (interest)=> {\n                    let config = {\n                        '1': '游泳',\n                        '2': '篮球',\n                        '3': '棒球',\n                    };\n                    return config[interest];\n                }\n            },\n            {\n                title: '生日',\n                dataIndex: 'birthday'\n            },\n            {\n                title: '地址',\n                dataIndex: 'address'\n            },\n            {\n                title: '早起时间',\n                dataIndex: 'time'\n            }\n        ];\n        const dataSource = [\n            {\n                id: \"0\",\n                userName: 'jack',\n                sex: '1',\n                state: '1',\n                interest: 1,\n                birthday: '2000-00-00',\n                address: '北京市海淀区',\n                time: '09:00'\n            },\n            {\n                id: \"1\",\n                userName: 'john',\n                sex: '1',\n                state: '1',\n                interest: 2,\n                birthday: '2000-00-00',\n                address: '北京市海淀区',\n                time: '09:00'\n            },\n            {\n                id: \"2\",\n                userName: 'Bob',\n                sex: '1',\n                state: '1',\n                interest: 3,\n                birthday: '2000-00-00',\n                address: '北京市海淀区',\n                time: '09:00'\n            }\n        ];\n        dataSource.map((item, index) => {\n            item.key = index;\n        });\n        this.setState({\n            columns,\n            dataSource\n        })\n\n        this.request();\n    }\n    // 基本使用\n    // request = () => {\n    //     let baseUrl = `http://yapi.demo.qunar.com/mock/80318`\n    //     axios.get(`${baseUrl}/demo/mock/table/list`)\n    //     .then(response => {\n    //         if (response.status == '200' && response.data.code == 0){\n    //             this.setState({\n    //                 dataSource1: response.data.result\n    //             })\n    //         }\n    //     }).catch( (error) => {\n    //         message.error(error.msg);\n    //     })\n    // }\n    // axios包装\n    request = ()=> {\n        let _this = this;\n        Axios.ajax({\n            url: '/demo/mock/table/list',\n            data: {\n                params: {\n                    page: this.params.page,\n                }\n            }\n        }).then(res => {\n            res.result.list.map((item, index) => {\n                item.key = index;\n            });\n            this.setState({\n                dataSource1: res.result.list,\n                selectedRowKeys: [],\n                selectedRows: null,\n                pagination: Utils.pagination(res, (current)=>{\n                    _this.params.page = current;\n                    this.request();\n                })\n            })\n        });\n    }\n\n    onRowClick = (record, index) => {\n        let selectKeys = [index];\n        this.setState({\n            selectedRowKeys: selectKeys,\n            selectItem: record\n        });\n    }\n    handleDelete = () => {\n        let {selectedRows} = this.state;\n        let ids = [];\n        selectedRows.map((item)=>{\n            ids.push(item.id);\n        })\n        Modal.confirm({\n            title: \"删除提示\",\n            content: `确定要删除${ids}`,\n            onOk: () => {\n                message.success('删除成功');\n                this.request();\n            }\n        });\n    }\n    render() {\n        // selectedRowKeys表示所选中行的key数组，这里是从onRow事件中获取然后存储到state中\n        const {selectedRowKeys} = this.state;\n\n        // 当onRow点击行选中时，只有给table设置了selectedRowKeys，按钮才会展示选中的行\n        let rowSelection = {\n            type: 'radio',\n            selectedRowKeys,\n        };\n        let rowCheckSelection = {\n            type: 'checkbox',\n            selectedRowKeys,\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.setState({\n                    selectedRowKeys,\n                    selectedRows\n                });\n            }\n\n        };\n        return (\n            <div>\n                <Card title=\"基础表格\">\n                    <Table\n                        columns={this.state.columns}\n                        dataSource={this.state.dataSource}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"动态数据渲染表格-mock\" style={{ margin: \"10px 0\" }}>\n                    <Table\n                        columns={this.state.columns}\n                        dataSource={this.state.dataSource1}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"mock-单选\" style={{ margin: \"10px 0\" }}>\n                    <Table\n                        bordered\n                        columns={this.state.columns}\n                        dataSource={this.state.dataSource1}\n                        rowSelection={rowSelection}\n                        onRow={ (record, index) => {\n                            return {\n                              onClick: () => {\n                                  this.onRowClick(record, index)\n                              }\n                            };\n                        }}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"mock-复选\" style={{ margin: \"10px 0\" }}>\n                    <div style={{  marginBottom: 10 }}>\n                        <Button type=\"primary\"\n                            onClick = {this.handleDelete}\n                        >\n                            删除\n                        </Button>\n                    </div>\n                    <Table\n                        bordered\n                        columns={this.state.columns}\n                        dataSource={this.state.dataSource1}\n                        rowSelection={rowCheckSelection}\n                        pagination={false}\n                    />\n                </Card>\n                <Card title=\"mock-分页封装\" style={{ margin: \"10px 0\" }}>\n                    <Table\n                        bordered\n                        columns={this.state.columns}\n                        dataSource={this.state.dataSource1}\n                        pagination={this.state.pagination}\n                    />\n                </Card>\n            </div>\n        )\n    }\n\n}\n\n\nexport default BasicTable;\n\n// rowSelection：  rowSelection 表格行是否可选择，配置项\n// selectedRowKeys: 告诉table当前选中了哪些行，同时table展示勾选被选中的行\n// onRow： 表示鼠标点击行的时候也可以选中当前行（默认情况下只能点击checkbox框才能选中）\n// pagination封装：第二个参数是回调函数，好好体会下"]},"metadata":{},"sourceType":"module"}