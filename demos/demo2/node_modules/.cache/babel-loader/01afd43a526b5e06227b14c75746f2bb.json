{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/modal/style\";\nimport _Modal from \"antd/lib/modal\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/order/index.js\";\nimport React from 'react';\nimport Axios from '../../axios/index';\nimport Utils from '../../utils/utils';\nimport BaseForm from '../../components/BaseForm';\nimport BaseTable from '../../components/BaseTable';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\nconst RadioGroup = _Radio.Group;\nexport default class Order extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isShowVisible: false,\n      selectedItem: {},\n      selectedRows: [],\n      selectedRowKeys: []\n    };\n    this.params = {\n      page: 1\n    };\n    this.formList = [{\n      type: 'SELECT',\n      label: '城市',\n      field: 'city',\n      placeholder: '全部',\n      initialValue: '1',\n      width: 80,\n      list: [{\n        id: '0',\n        name: '全部'\n      }, {\n        id: '1',\n        name: '北京'\n      }, {\n        id: '2',\n        name: '天津'\n      }, {\n        id: '3',\n        name: '深圳'\n      }]\n    }, {\n      type: '时间查询'\n    }, {\n      type: 'SELECT',\n      label: '订单状态',\n      field: 'orderStatus',\n      placeholder: '全部',\n      initialValue: '1',\n      width: 80,\n      list: [{\n        id: '0',\n        name: '全部'\n      }, {\n        id: '1',\n        name: '进行中'\n      }, {\n        id: '2',\n        name: '行程结束'\n      }]\n    }];\n\n    this.requestList = () => {\n      Axios.requestList(this, '/order/list', this.params); // Axios.ajax({\n      //     url: '/order/list',\n      //     data: {\n      //         params: this.params\n      //     }\n      // }).then(res => {\n      //     let list = res.result.itermList.map((item, index) => {\n      //         item.key = index;\n      //         return item;\n      //     });\n      //     this.setState({\n      //         list,\n      //         pagination: Utils.pagination(res, current => {\n      //             _this.params.page = current;\n      //             _this.requestList();\n      //         })\n      //     })\n      // }).catch(error => {\n      //     throw new Error(error);\n      // });\n    };\n\n    this.handleConfirm = () => {\n      if (!this.state.selectedRowKeys.length) {\n        _Modal.info({\n          title: \"信息\",\n          content: \"请选择一条订单进行结束\"\n        });\n\n        return;\n      }\n\n      this.setState({\n        isShowVisible: true\n      });\n    };\n\n    this.handleFinishOrder = () => {\n      Axios.ajax({\n        url: '/order/finishOrder',\n        data: {\n          params: {\n            finishInfo: this.state.selectedItem\n          }\n        }\n      }).then(res => {\n        _message.success(res.result);\n\n        this.setState({\n          isShowVisible: false,\n          // 结束订单之后需要设置selectedRowKeys为[]，是因为这个表示已经被选择的选项，否则列表中选项一直是被选中的状态\n          selectedRowKeys: [],\n          selectedItem: {}\n        });\n        this.requestList();\n      });\n    };\n\n    this.openOrderDetail = () => {\n      let id;\n\n      if (!this.state.selectedRowKeys.length) {\n        _Modal.info({\n          title: \"信息\",\n          content: \"请先选择一条订单\"\n        });\n\n        return;\n      }\n\n      if (this.state.selectedItem) {\n        id = this.state.selectedItem.id;\n      }\n\n      window.open(`/#/common/order/detail/${id}`, '_blank');\n    };\n\n    this.handleFilter = params => {\n      this.params = params;\n      this.requestList();\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  }\n\n  render() {\n    const columns = [{\n      title: \"订单编号\",\n      dataIndex: \"orderSn\"\n    }, {\n      title: \"车辆编号\",\n      dataIndex: \"bikeSn\"\n    }, {\n      title: \"用户民\",\n      dataIndex: \"userName\"\n    }, {\n      title: \"手机号\",\n      dataIndex: \"mobile\"\n    }, {\n      title: \"里程\",\n      dataIndex: \"distance\"\n    }, {\n      title: \"行驶时长\",\n      dataIndex: \"totalTime\"\n    }, {\n      title: \"状态\",\n      dataIndex: \"status\"\n    }, {\n      title: \"开始时间\",\n      dataIndex: \"startTime\"\n    }, {\n      title: \"结束时间\",\n      dataIndex: \"endTime\"\n    }, {\n      title: \"订单金额\",\n      dataIndex: \"totalFee\"\n    }, {\n      title: \"实际金额\",\n      dataIndex: \"userPay\"\n    }]; // const rowSelection = {\n    //     type: \"radio\",\n    //     onChange: (selectedRowKeys, selectedRows) => {\n    //         this.setState({\n    //             selectedRow: selectedRows[0],\n    //             selectedRowKeys\n    //         });\n    //     },\n    //     selectedRowKeys: this.state.selectedRowKeys\n    // }\n\n    let formLayout = {\n      labelCol: {\n        span: 6\n      },\n      wrapperCol: {\n        span: 18\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BaseForm, {\n      formList: this.formList,\n      filterSubmit: this.handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.openOrderDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, \"\\u8BA2\\u5355\\u8BE6\\u60C5\"), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.handleConfirm,\n      style: {\n        marginLeft: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }, \"\\u7ED3\\u675F\\u8BA2\\u5355\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BaseTable, {\n      columns: columns,\n      dataSource: this.state.list,\n      pagination: this.state.pagination,\n      selectedRowKeys: this.state.selectedRowKeys,\n      selectedItem: this.state.selectedItem,\n      selectedRows: this.state.selectedRows,\n      updateSelectItem: Utils.updateSelectItem.bind(this),\n      rowSelectionType: \"checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(_Modal, {\n      title: \"\\u7ED3\\u675F\\u8BA2\\u5355\",\n      visible: this.state.isShowVisible,\n      onOk: this.handleFinishOrder,\n      onCancel: () => {\n        this.setState({\n          isShowVisible: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Form, {\n      layout: \"horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u7528\\u6237\\u540D\"\n    }, formLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }), this.state.selectedItem.userName), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u8F66\\u8F86\\u7F16\\u53F7\"\n    }, formLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }), this.state.selectedItem.bikeSn), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u884C\\u7A0B\\u5F00\\u59CB\\u65F6\\u95F4\"\n    }, formLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }), this.state.selectedItem.startTime))));\n  }\n\n} // class FilterForm extends React.Component {\n//     render() {\n//         const { getFieldDecorator } = this.props.form;\n//         return (\n//             <Form layout=\"inline\">\n//                 <FormItem label=\"城市\">\n//                     {\n//                         getFieldDecorator(\"city_id\", {\n//                             initialValue: \"\"\n//                         })(\n//                             <Select placeholder=\"全部\" style={{ width: 80 }}>\n//                                 <Option value=\"\">全部</Option>\n//                                 <Option value=\"1\">北京市</Option>\n//                                 <Option value=\"2\">天津市</Option>\n//                                 <Option value=\"3\">深圳市</Option>\n//                             </Select>\n//                         )\n//                     }\n//                 </FormItem>\n//                 <FormItem label=\"订单时间\">\n//                     {\n//                         getFieldDecorator(\"start_time\", {\n//                             initialValue: \"\"\n//                         })(\n//                             <DatePicker placeholder=\"选择开始时间\" showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n//                         )\n//                     }\n//                 </FormItem>\n//                 <FormItem label=\"\">\n//                     {\n//                         getFieldDecorator(\"end_time\", {\n//                             initialValue: \"\"\n//                         })(\n//                             <DatePicker placeholder=\"选择结束时间\" showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n//                         )\n//                     }\n//                 </FormItem>\n//                 <FormItem label=\"订单状态\">\n//                     {\n//                         getFieldDecorator(\"status\", {\n//                             initialValue: \"\"\n//                         })(\n//                             <Select style={{ width: 100 }}>\n//                                 <Option value=\"\">全部</Option>\n//                                 <Option value=\"1\">进行中</Option>\n//                                 <Option value=\"2\">进行中(临时锁车)</Option>\n//                                 <Option value=\"3\">行程结束</Option>\n//                             </Select>\n//                         )\n//                     }\n//                 </FormItem>\n//                 <FormItem label=\"\">\n//                     <Button type=\"primary\" style={{ margin: \"0 20px\", width: 100 }}>查询</Button>\n//                     <Button style={{ width: 100 }}>重置</Button>\n//                 </FormItem>\n//             </Form>\n//         );\n//     }\n// }\n// FilterForm = Form.create({})(FilterForm);","map":{"version":3,"sources":["/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/order/index.js"],"names":["React","Axios","Utils","BaseForm","BaseTable","FormItem","Item","Option","RadioGroup","Group","Order","Component","state","isShowVisible","selectedItem","selectedRows","selectedRowKeys","params","page","formList","type","label","field","placeholder","initialValue","width","list","id","name","requestList","handleConfirm","length","info","title","content","setState","handleFinishOrder","ajax","url","data","finishInfo","then","res","success","result","openOrderDetail","window","open","handleFilter","componentDidMount","render","columns","dataIndex","formLayout","labelCol","span","wrapperCol","marginTop","marginLeft","pagination","updateSelectItem","bind","userName","bikeSn","startTime"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Card, Button, Select, Table, Modal, Radio, message, DatePicker } from 'antd';\nimport Axios from '../../axios/index';\nimport Utils from '../../utils/utils';\nimport BaseForm from '../../components/BaseForm';\nimport BaseTable from '../../components/BaseTable';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst RadioGroup = Radio.Group;\n\nexport default class Order extends React.Component {\n    state = {\n        isShowVisible: false,\n        selectedItem: {},\n        selectedRows: [],\n        selectedRowKeys: []\n    };\n    params = {\n        page: 1\n    };\n    formList = [\n        {\n            type: 'SELECT',\n            label: '城市',\n            field: 'city',\n            placeholder: '全部',\n            initialValue: '1',\n            width: 80,\n            list: [{id: '0', name: '全部'},{id: '1', name: '北京'},{id: '2', name: '天津'},{id: '3', name: '深圳'}]\n        },\n        {\n            type: '时间查询',\n        },\n        {\n            type: 'SELECT',\n            label: '订单状态',\n            field: 'orderStatus',\n            placeholder: '全部',\n            initialValue: '1',\n            width: 80,\n            list: [{id: '0', name: '全部'},{id: '1', name: '进行中'},{id: '2', name: '行程结束'}]\n        }\n    ];\n\n    componentDidMount() {\n        this.requestList();\n    }\n    requestList = () => {\n\n        Axios.requestList(this, '/order/list', this.params);\n        // Axios.ajax({\n        //     url: '/order/list',\n        //     data: {\n        //         params: this.params\n        //     }\n        // }).then(res => {\n        //     let list = res.result.itermList.map((item, index) => {\n        //         item.key = index;\n        //         return item;\n        //     });\n        //     this.setState({\n        //         list,\n        //         pagination: Utils.pagination(res, current => {\n        //             _this.params.page = current;\n        //             _this.requestList();\n        //         })\n        //     })\n        // }).catch(error => {\n        //     throw new Error(error);\n        // });\n    }\n\n    // 结束订单确认\n    handleConfirm = () => {\n        if(!this.state.selectedRowKeys.length){\n            Modal.info({\n                title: \"信息\",\n                content: \"请选择一条订单进行结束\"\n            });\n            return;\n        }\n        this.setState({\n            isShowVisible: true\n        })\n    }\n\n    // 结束订单\n    handleFinishOrder = () => {\n        Axios.ajax({\n            url: '/order/finishOrder',\n            data: {\n                params: {\n                    finishInfo: this.state.selectedItem\n                }\n            }\n        }).then((res)=>{\n            message.success(res.result);\n            this.setState({\n                isShowVisible: false,\n                // 结束订单之后需要设置selectedRowKeys为[]，是因为这个表示已经被选择的选项，否则列表中选项一直是被选中的状态\n                selectedRowKeys: [],\n                selectedItem: {}\n            })\n            this.requestList();\n        });\n    }\n\n\n    openOrderDetail = ()=>{\n        let id;\n        if(!this.state.selectedRowKeys.length){\n            Modal.info({\n                title: \"信息\",\n                content: \"请先选择一条订单\"\n            });\n            return;\n        }\n        if(this.state.selectedItem){\n            id = this.state.selectedItem.id;\n        }\n        window.open(`/#/common/order/detail/${id}`, '_blank');\n    }\n\n\n    // onRowClick = (record, index) => {\n    //     let selectKeys = [index];\n    //     this.setState({\n    //         selectedRowKeys: selectKeys,\n    //         selectedItem: record,\n    //         selectedRow: record\n    //     });\n    // }\n\n    handleFilter = (params)=>{\n        this.params = params;\n        this.requestList();\n    }\n\n    render() {\n        const columns = [\n            {\n                title: \"订单编号\",\n                dataIndex: \"orderSn\",\n            }, {\n                title: \"车辆编号\",\n                dataIndex: \"bikeSn\",\n            }, {\n                title: \"用户民\",\n                dataIndex: \"userName\",\n            }, {\n                title: \"手机号\",\n                dataIndex: \"mobile\",\n            }, {\n                title: \"里程\",\n                dataIndex: \"distance\",\n            }, {\n                title: \"行驶时长\",\n                dataIndex: \"totalTime\",\n            }, {\n                title: \"状态\",\n                dataIndex: \"status\",\n            }, {\n                title: \"开始时间\",\n                dataIndex: \"startTime\",\n            }, {\n                title: \"结束时间\",\n                dataIndex: \"endTime\",\n            }, {\n                title: \"订单金额\",\n                dataIndex: \"totalFee\",\n            }, {\n                title: \"实际金额\",\n                dataIndex: \"userPay\",\n            },\n        ];\n        // const rowSelection = {\n        //     type: \"radio\",\n        //     onChange: (selectedRowKeys, selectedRows) => {\n        //         this.setState({\n        //             selectedRow: selectedRows[0],\n        //             selectedRowKeys\n        //         });\n        //     },\n        //     selectedRowKeys: this.state.selectedRowKeys\n        // }\n\n        let formLayout = {\n            labelCol: {\n                span: 6\n            },\n            wrapperCol: {\n                span: 18\n            }\n        }\n\n        return (\n            <div>\n                <Card>\n                    {/* <FilterForm /> */}\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter}/>\n                </Card>\n                <Card style={{ marginTop: 10 }}>\n                    <Button type=\"primary\" onClick={this.openOrderDetail}>订单详情</Button>\n                    <Button type=\"primary\" onClick={this.handleConfirm} style={{ marginLeft: 10 }}>结束订单</Button>\n                </Card>\n                <div className=\"content-wrap\">\n\n                    <BaseTable\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        selectedRowKeys={this.state.selectedRowKeys}\n                        selectedItem={this.state.selectedItem}\n                        selectedRows={this.state.selectedRows}\n                        updateSelectItem={Utils.updateSelectItem.bind(this)}\n                        rowSelectionType=\"checkbox\"\n                    />\n                    {/* <Table\n                        bordered\n                        columns={columns}\n                        dataSource={this.state.list}\n                        pagination={this.state.pagination}\n                        rowSelection={rowSelection}\n                        onRow={ (record, index) => {\n                            return {\n                              onClick: () => {\n                                  this.onRowClick(record, index)\n                              }\n                            };\n                        }}\n                    /> */}\n                </div>\n\n                <Modal\n                    title=\"结束订单\"\n                    visible={this.state.isShowVisible}\n                    onOk={this.handleFinishOrder}\n                    onCancel={() => {\n                        this.setState({\n                            isShowVisible: false\n                        })\n                    }}\n                >\n                    <Form layout=\"horizontal\">\n                        <FormItem label=\"用户名\" {...formLayout}>\n                            {this.state.selectedItem.userName}\n                        </FormItem>\n                        <FormItem label=\"车辆编号\" {...formLayout}>\n                            {this.state.selectedItem.bikeSn}\n                        </FormItem>\n                        <FormItem label=\"行程开始时间\" {...formLayout}>\n                            {this.state.selectedItem.startTime}\n                        </FormItem>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n// class FilterForm extends React.Component {\n//     render() {\n//         const { getFieldDecorator } = this.props.form;\n//         return (\n//             <Form layout=\"inline\">\n//                 <FormItem label=\"城市\">\n//                     {\n//                         getFieldDecorator(\"city_id\", {\n//                             initialValue: \"\"\n//                         })(\n//                             <Select placeholder=\"全部\" style={{ width: 80 }}>\n//                                 <Option value=\"\">全部</Option>\n//                                 <Option value=\"1\">北京市</Option>\n//                                 <Option value=\"2\">天津市</Option>\n//                                 <Option value=\"3\">深圳市</Option>\n//                             </Select>\n//                         )\n//                     }\n//                 </FormItem>\n//                 <FormItem label=\"订单时间\">\n//                     {\n//                         getFieldDecorator(\"start_time\", {\n//                             initialValue: \"\"\n//                         })(\n//                             <DatePicker placeholder=\"选择开始时间\" showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n//                         )\n//                     }\n//                 </FormItem>\n//                 <FormItem label=\"\">\n//                     {\n//                         getFieldDecorator(\"end_time\", {\n//                             initialValue: \"\"\n//                         })(\n//                             <DatePicker placeholder=\"选择结束时间\" showTime format=\"YYYY-MM-DD HH:mm:ss\" />\n//                         )\n//                     }\n//                 </FormItem>\n//                 <FormItem label=\"订单状态\">\n//                     {\n//                         getFieldDecorator(\"status\", {\n//                             initialValue: \"\"\n//                         })(\n//                             <Select style={{ width: 100 }}>\n//                                 <Option value=\"\">全部</Option>\n//                                 <Option value=\"1\">进行中</Option>\n//                                 <Option value=\"2\">进行中(临时锁车)</Option>\n//                                 <Option value=\"3\">行程结束</Option>\n//                             </Select>\n//                         )\n//                     }\n//                 </FormItem>\n//                 <FormItem label=\"\">\n//                     <Button type=\"primary\" style={{ margin: \"0 20px\", width: 100 }}>查询</Button>\n//                     <Button style={{ width: 100 }}>重置</Button>\n//                 </FormItem>\n//             </Form>\n//         );\n//     }\n// }\n// FilterForm = Form.create({})(FilterForm);\n"]},"metadata":{},"sourceType":"module"}