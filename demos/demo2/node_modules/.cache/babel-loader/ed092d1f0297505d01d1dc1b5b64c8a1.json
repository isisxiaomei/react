{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nvar _jsxFileName = \"/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/echarts/line/index.js\";\nimport React from 'react';\n// 按需加载\nimport echarts from 'echarts/lib/echarts'; // 导入柱形图\n\nimport 'echarts/lib/chart/bar'; // 引入提示框和标题组件\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\nimport ReactEcharts from 'echarts-for-react';\nimport echartsTheme from '../echartsTheme';\nexport default class Line extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOption = () => {\n      let option = {\n        title: {\n          text: '用户骑行订单'\n        },\n        // 副标题\n        legend: {\n          // 这里的data和series的data数据项的name关联起来才会展示\n          data: ['OFO', '摩拜', '小蓝']\n        },\n        // 鼠标放上去的提示\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n        series: [{\n          name: 'OFO',\n          type: 'line',\n          data: [10, 52, 200, 334, 390, 330, 220]\n        }, {\n          name: '摩拜',\n          type: 'line',\n          data: [100, 10, 200, 500, 600, 700, 100]\n        }, {\n          name: '小蓝',\n          type: 'line',\n          data: [120, 520, 250, 300, 330, 400, 100]\n        }]\n      };\n      return option;\n    };\n\n    this.getOption2 = () => {\n      let option = {\n        title: {\n          text: '用户骑行订单'\n        },\n        // 副标题\n        legend: {\n          // 这里的data和series的data数据项的name关联起来才会展示\n          data: ['OFO', '摩拜', '小蓝']\n        },\n        // 鼠标放上去的提示\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985'\n            }\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n        series: [{\n          name: 'OFO',\n          type: 'line',\n          data: [10, 52, 200, 334, 390, 330, 220],\n          areaStyle: {}\n        }, {\n          name: '摩拜',\n          type: 'line',\n          data: [100, 10, 200, 500, 600, 700, 100],\n          areaStyle: {}\n        }, {\n          name: '小蓝',\n          type: 'line',\n          data: [120, 520, 250, 300, 330, 400, 100],\n          areaStyle: {}\n        }]\n      };\n      return option;\n    };\n  }\n\n  componentWillMount() {\n    // 这里使用官方主题所以option里面不要再配置color\n    echarts.registerTheme('infographic', echartsTheme);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u6298\\u7EBF\\u56FE\\u4E00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactEcharts, {\n      option: this.getOption(),\n      theme: \"infographic\",\n      style: {\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u6298\\u7EBF\\u56FE\\u4E8C\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactEcharts, {\n      option: this.getOption2(),\n      theme: \"infographic\",\n      style: {\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/echarts/line/index.js"],"names":["React","echarts","ReactEcharts","echartsTheme","Line","Component","getOption","option","title","text","legend","data","tooltip","trigger","axisPointer","type","label","backgroundColor","xAxis","boundaryGap","yAxis","series","name","getOption2","areaStyle","componentWillMount","registerTheme","render","height","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Card} from 'antd'\n// 按需加载\nimport echarts from 'echarts/lib/echarts'\n// 导入柱形图\nimport 'echarts/lib/chart/bar'\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/markPoint'\nimport ReactEcharts from 'echarts-for-react'\nimport echartsTheme from '../echartsTheme'\n\nexport default class Line extends React.Component{\n\n    componentWillMount(){\n        // 这里使用官方主题所以option里面不要再配置color\n        echarts.registerTheme('infographic', echartsTheme);\n    }\n\n\n    getOption = ()=>{\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            // 副标题\n            legend: {\n                // 这里的data和series的data数据项的name关联起来才会展示\n                data: ['OFO', '摩拜', '小蓝']\n            },\n            // 鼠标放上去的提示\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'cross',\n                    label: {\n                        backgroundColor: '#6a7985'\n                    }\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n\n            // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n            series: [\n                {\n                    name: 'OFO',\n                    type: 'line',\n                    data: [10, 52, 200, 334, 390, 330, 220]\n                },\n                {\n                    name: '摩拜',\n                    type: 'line',\n                    data: [100, 10, 200, 500, 600, 700, 100]\n                },\n                {\n                    name: '小蓝',\n                    type: 'line',\n                    data: [120, 520, 250, 300, 330, 400, 100],\n                },\n\n            ]\n        }\n        return option\n    }\n    getOption2 = ()=>{\n        let option = {\n            title: {\n                text: '用户骑行订单'\n            },\n            // 副标题\n            legend: {\n                // 这里的data和series的data数据项的name关联起来才会展示\n                data: ['OFO', '摩拜', '小蓝']\n            },\n            // 鼠标放上去的提示\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'cross',\n                    label: {\n                        backgroundColor: '#6a7985'\n                    }\n                }\n            },\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n            },\n            yAxis: {\n                type: 'value'\n            },\n\n            // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n            series: [\n                {\n                    name: 'OFO',\n                    type: 'line',\n                    data: [10, 52, 200, 334, 390, 330, 220],\n                    areaStyle: {}\n                },\n                {\n                    name: '摩拜',\n                    type: 'line',\n                    data: [100, 10, 200, 500, 600, 700, 100],\n                    areaStyle: {}\n                },\n                {\n                    name: '小蓝',\n                    type: 'line',\n                    data: [120, 520, 250, 300, 330, 400, 100],\n                    areaStyle: {}\n                },\n\n            ]\n        }\n        return option\n    }\n    render(){\n        return(\n        <div>\n            <Card title=\"折线图一\" >\n                {/*  theme：infographic关联导入的 echarts.registerTheme('infographic', echartsTheme);*/}\n                <ReactEcharts option={this.getOption()} theme=\"infographic\" style={{height: 500}}/>\n            </Card>\n            <Card title=\"折线图二\" style={{ marginTop: 10 }}>\n                <ReactEcharts option={this.getOption2()} theme=\"infographic\" style={{height: 500}}/>\n            </Card>\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}