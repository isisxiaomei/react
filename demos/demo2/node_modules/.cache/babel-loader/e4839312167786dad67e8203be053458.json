{"ast":null,"code":"import \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/xumeihong/Documents/code/git/react/demos/demo2/src/utils/utils.js\";\nimport React from 'react';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\nexport default {\n  formatDate(time) {\n    if (!time) return '';\n    let date = new Date(time);\n    return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n  },\n\n  pagination(data, callback) {\n    return {\n      current: data.result.page,\n      pageSize: data.result.pageSize,\n      total: data.result.totalCount,\n      onChange: current => {\n        callback(current);\n      },\n      showTotal: () => {\n        return `共${data.result.totalCount}条数据`;\n      },\n      showQuickJumper: true\n    };\n  },\n\n  getOptionsList(data) {\n    if (!data) {\n      return [];\n    }\n\n    let options = [];\n    data.map((item, index) => {\n      options.push( /*#__PURE__*/React.createElement(Option, {\n        value: item.id,\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 26\n        }\n      }, item.name));\n    });\n    return options;\n  },\n\n  updateSelectItem(selectedRowKeys, selectedItem, selectedRows) {\n    this.setState({\n      selectedRowKeys,\n      selectedItem,\n      selectedRows\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/xumeihong/Documents/code/git/react/demos/demo2/src/utils/utils.js"],"names":["React","FormItem","Item","Option","formatDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","pagination","data","callback","current","result","page","pageSize","total","totalCount","onChange","showTotal","showQuickJumper","getOptionsList","options","map","item","index","push","id","name","updateSelectItem","selectedRowKeys","selectedItem","selectedRows","setState"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,MAAKC,IAAtB;AACA,MAAMC,MAAM,GAAG,QAAOA,MAAtB;AAEA,eAAe;AACXC,EAAAA,UAAU,CAACC,IAAD,EAAM;AACZ,QAAG,CAACA,IAAJ,EAAU,OAAO,EAAP;AACV,QAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAX;AACA,WAAOC,IAAI,CAACE,WAAL,KAAmB,GAAnB,IAAwBF,IAAI,CAACG,QAAL,KAAgB,CAAxC,IAA2C,GAA3C,GAA+CH,IAAI,CAACI,OAAL,EAA/C,GAA8D,GAA9D,GAAkEJ,IAAI,CAACK,QAAL,EAAlE,GAAkF,GAAlF,GAAsFL,IAAI,CAACM,UAAL,EAAtF,GAAwG,GAAxG,GAA4GN,IAAI,CAACO,UAAL,EAAnH;AACH,GALU;;AAMXC,EAAAA,UAAU,CAACC,IAAD,EAAOC,QAAP,EAAgB;AACtB,WAAO;AACHC,MAAAA,OAAO,EAAEF,IAAI,CAACG,MAAL,CAAYC,IADlB;AAEHC,MAAAA,QAAQ,EAAEL,IAAI,CAACG,MAAL,CAAYE,QAFnB;AAGHC,MAAAA,KAAK,EAAEN,IAAI,CAACG,MAAL,CAAYI,UAHhB;AAIHC,MAAAA,QAAQ,EAAGN,OAAD,IAAa;AACnBD,QAAAA,QAAQ,CAACC,OAAD,CAAR;AACH,OANE;AAOHO,MAAAA,SAAS,EAAE,MAAM;AACb,eAAQ,IAAGT,IAAI,CAACG,MAAL,CAAYI,UAAW,KAAlC;AACH,OATE;AAUHG,MAAAA,eAAe,EAAE;AAVd,KAAP;AAYH,GAnBU;;AAoBXC,EAAAA,cAAc,CAACX,IAAD,EAAM;AAChB,QAAG,CAACA,IAAJ,EAAS;AACL,aAAO,EAAP;AACH;;AACD,QAAIY,OAAO,GAAG,EAAd;AACAZ,IAAAA,IAAI,CAACa,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtBH,MAAAA,OAAO,CAACI,IAAR,eAAa,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEF,IAAI,CAACG,EAApB;AAAwB,QAAA,GAAG,EAAEF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCD,IAAI,CAACI,IAA1C,CAAb;AACH,KAFD;AAGA,WAAON,OAAP;AACH,GA7BU;;AA+BXO,EAAAA,gBAAgB,CAACC,eAAD,EAAkBC,YAAlB,EAAgCC,YAAhC,EAA6C;AACzD,SAAKC,QAAL,CAAc;AACVH,MAAAA,eADU;AAEVC,MAAAA,YAFU;AAGVC,MAAAA;AAHU,KAAd;AAKH;;AArCU,CAAf","sourcesContent":["import React from 'react';\nimport {Input, Select, Form, Button, Checkbox, Radio} from 'antd'\nconst FormItem = Form.Item;\nconst Option = Select.Option;\n\nexport default {\n    formatDate(time){\n        if(!time) return '';\n        let date = new Date(time);\n        return date.getFullYear()+'-'+(date.getMonth()+1)+'-'+date.getDate()+' '+date.getHours()+':'+date.getMinutes()+':'+date.getSeconds();\n    },\n    pagination(data, callback){\n        return {\n            current: data.result.page,\n            pageSize: data.result.pageSize,\n            total: data.result.totalCount,\n            onChange: (current) => {\n                callback(current)\n            },\n            showTotal: () => {\n                return `共${data.result.totalCount}条数据`\n            },\n            showQuickJumper: true\n        };\n    },\n    getOptionsList(data){\n        if(!data){\n            return [];\n        }\n        let options = [];\n        data.map((item, index) => {\n            options.push(<Option value={item.id} key={index}>{item.name}</Option>);\n        });\n        return options;\n    },\n\n    updateSelectItem(selectedRowKeys, selectedItem, selectedRows){\n        this.setState({\n            selectedRowKeys,\n            selectedItem,\n            selectedRows\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}