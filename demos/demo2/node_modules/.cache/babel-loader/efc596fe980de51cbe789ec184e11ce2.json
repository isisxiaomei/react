{"ast":null,"code":"/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;","map":{"version":3,"sources":["/Users/xumeihong/Documents/code/git/react/demos/demo2/node_modules/echarts/lib/chart/graph/simpleLayoutHelper.js"],"names":["vec2","require","simpleLayout","seriesModel","coordSys","coordinateSystem","type","graph","getGraph","eachNode","node","model","getModel","setLayout","get","simpleLayoutEdge","eachEdge","edge","curveness","p1","clone","node1","getLayout","p2","node2","points","push","exports"],"mappings":"AACA;;;;;;;;;;;;;;;;;;AAmBA,IAAIA,IAAI,GAAGC,OAAO,CAAC,yBAAD,CAAlB;AAEA;;;;;;;;;;;;;;;;;;;;AAkBA,SAASC,YAAT,CAAsBC,WAAtB,EAAmC;AACjC,MAAIC,QAAQ,GAAGD,WAAW,CAACE,gBAA3B;;AAEA,MAAID,QAAQ,IAAIA,QAAQ,CAACE,IAAT,KAAkB,MAAlC,EAA0C;AACxC;AACD;;AAED,MAAIC,KAAK,GAAGJ,WAAW,CAACK,QAAZ,EAAZ;AACAD,EAAAA,KAAK,CAACE,QAAN,CAAe,UAAUC,IAAV,EAAgB;AAC7B,QAAIC,KAAK,GAAGD,IAAI,CAACE,QAAL,EAAZ;AACAF,IAAAA,IAAI,CAACG,SAAL,CAAe,CAAC,CAACF,KAAK,CAACG,GAAN,CAAU,GAAV,CAAF,EAAkB,CAACH,KAAK,CAACG,GAAN,CAAU,GAAV,CAAnB,CAAf;AACD,GAHD;AAIAC,EAAAA,gBAAgB,CAACR,KAAD,CAAhB;AACD;;AAED,SAASQ,gBAAT,CAA0BR,KAA1B,EAAiC;AAC/BA,EAAAA,KAAK,CAACS,QAAN,CAAe,UAAUC,IAAV,EAAgB;AAC7B,QAAIC,SAAS,GAAGD,IAAI,CAACL,QAAL,GAAgBE,GAAhB,CAAoB,qBAApB,KAA8C,CAA9D;AACA,QAAIK,EAAE,GAAGnB,IAAI,CAACoB,KAAL,CAAWH,IAAI,CAACI,KAAL,CAAWC,SAAX,EAAX,CAAT;AACA,QAAIC,EAAE,GAAGvB,IAAI,CAACoB,KAAL,CAAWH,IAAI,CAACO,KAAL,CAAWF,SAAX,EAAX,CAAT;AACA,QAAIG,MAAM,GAAG,CAACN,EAAD,EAAKI,EAAL,CAAb;;AAEA,QAAI,CAACL,SAAL,EAAgB;AACdO,MAAAA,MAAM,CAACC,IAAP,CAAY,CAAC,CAACP,EAAE,CAAC,CAAD,CAAF,GAAQI,EAAE,CAAC,CAAD,CAAX,IAAkB,CAAlB,GAAsB,CAACJ,EAAE,CAAC,CAAD,CAAF,GAAQI,EAAE,CAAC,CAAD,CAAX,IAAkBL,SAAzC,EAAoD,CAACC,EAAE,CAAC,CAAD,CAAF,GAAQI,EAAE,CAAC,CAAD,CAAX,IAAkB,CAAlB,GAAsB,CAACA,EAAE,CAAC,CAAD,CAAF,GAAQJ,EAAE,CAAC,CAAD,CAAX,IAAkBD,SAA5F,CAAZ;AACD;;AAEDD,IAAAA,IAAI,CAACJ,SAAL,CAAeY,MAAf;AACD,GAXD;AAYD;;AAEDE,OAAO,CAACzB,YAAR,GAAuBA,YAAvB;AACAyB,OAAO,CAACZ,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction simpleLayout(seriesModel) {\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (coordSys && coordSys.type !== 'view') {\n    return;\n  }\n\n  var graph = seriesModel.getGraph();\n  graph.eachNode(function (node) {\n    var model = node.getModel();\n    node.setLayout([+model.get('x'), +model.get('y')]);\n  });\n  simpleLayoutEdge(graph);\n}\n\nfunction simpleLayoutEdge(graph) {\n  graph.eachEdge(function (edge) {\n    var curveness = edge.getModel().get('lineStyle.curveness') || 0;\n    var p1 = vec2.clone(edge.node1.getLayout());\n    var p2 = vec2.clone(edge.node2.getLayout());\n    var points = [p1, p2];\n\n    if (+curveness) {\n      points.push([(p1[0] + p2[0]) / 2 - (p1[1] - p2[1]) * curveness, (p1[1] + p2[1]) / 2 - (p2[0] - p1[0]) * curveness]);\n    }\n\n    edge.setLayout(points);\n  });\n}\n\nexports.simpleLayout = simpleLayout;\nexports.simpleLayoutEdge = simpleLayoutEdge;"]},"metadata":{},"sourceType":"script"}