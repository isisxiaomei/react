{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nvar _jsxFileName = \"/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/echarts/pie/index.js\";\nimport React from 'react';\n// 按需加载\nimport echarts from 'echarts/lib/echarts'; // 导入柱形图\n\nimport 'echarts/lib/chart/bar'; // 引入提示框和标题组件\n\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/markPoint';\nimport ReactEcharts from 'echarts-for-react';\nimport echartsTheme from '../echartsTheme';\nexport default class Pie extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getOption = () => {\n      let option = {\n        title: {\n          text: '用户骑行订单',\n          x: 'center'\n        },\n        // 副标题\n        legend: {\n          // 这里的data和series的data数据项的name关联起来才会展示\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          orient: 'vertical',\n          right: 10,\n          top: 50,\n          bottom: 20\n        },\n        // 鼠标放上去的提示\n        tooltip: {\n          trigger: 'item',\n          // 用以定义提示框的内容提示格式\n          formatter: '{a} </br>{b}: {c}({d}%)'\n        },\n        // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n        series: [{\n          name: '订单量',\n          type: 'pie',\n          data: [{\n            name: 'Mon',\n            value: 10\n          }, {\n            name: 'Tue',\n            value: 20\n          }, {\n            name: 'Wed',\n            value: 50\n          }, {\n            name: 'Thu',\n            value: 80\n          }, {\n            name: 'Fri',\n            value: 100\n          }, {\n            name: 'Sat',\n            value: 100\n          }, {\n            name: 'Sun',\n            value: 100\n          }]\n        }]\n      };\n      return option;\n    };\n\n    this.getOption2 = () => {\n      let option = {\n        title: {\n          text: '用户骑行订单',\n          x: 'center'\n        },\n        legend: {\n          // 这里的data和series的data数据项的name关联起来才会展示\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          orient: 'vertical',\n          right: 10,\n          top: 50,\n          bottom: 20\n        },\n        tooltip: {\n          trigger: 'item',\n          // 用以定义提示框的内容提示格式\n          formatter: '{a} </br>{b}: {c}{d}%）'\n        },\n        // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n        series: [{\n          name: '订单量',\n          type: 'pie',\n          // 内环半径，外环半径\n          radius: ['50%', '80%'],\n          data: [{\n            name: 'Mon',\n            value: 10\n          }, {\n            name: 'Tue',\n            value: 20\n          }, {\n            name: 'Wed',\n            value: 50\n          }, {\n            name: 'Thu',\n            value: 80\n          }, {\n            name: 'Fri',\n            value: 100\n          }, {\n            name: 'Sat',\n            value: 100\n          }, {\n            name: 'Sun',\n            value: 100\n          }]\n        }]\n      };\n      return option;\n    };\n\n    this.getOption3 = () => {\n      let option = {\n        title: {\n          text: '用户骑行订单',\n          x: 'center'\n        },\n        legend: {\n          // 这里的data和series的data数据项的name关联起来才会展示\n          data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n          orient: 'vertical',\n          right: 10,\n          top: 50,\n          bottom: 20\n        },\n        tooltip: {\n          trigger: 'item',\n          // 用以定义提示框的内容提示格式\n          formatter: '{a} </br>{b}: {c}--{d}%'\n        },\n        // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n        series: [{\n          name: '订单量',\n          type: 'pie',\n          radius: '80%',\n          roseType: 'radius',\n          data: [{\n            name: 'Mon',\n            value: 10\n          }, {\n            name: 'Tue',\n            value: 20\n          }, {\n            name: 'Wed',\n            value: 50\n          }, {\n            name: 'Thu',\n            value: 80\n          }, {\n            name: 'Fri',\n            value: 100\n          }, {\n            name: 'Sat',\n            value: 100\n          }, {\n            name: 'Sun',\n            value: 60\n          }].sort((a, b) => a.value - b.value)\n        }]\n      };\n      return option;\n    };\n  }\n\n  componentWillMount() {\n    // 这里使用官方主题所以option里面不要再配置color\n    echarts.registerTheme('infographic', echartsTheme);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u997C\\u56FE\\u4E00\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactEcharts, {\n      option: this.getOption(),\n      theme: \"infographic\",\n      style: {\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u997C\\u56FE\\u4E8C\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactEcharts, {\n      option: this.getOption2(),\n      theme: \"infographic\",\n      style: {\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u997C\\u56FE\\u4E09\",\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ReactEcharts, {\n      option: this.getOption3(),\n      theme: \"infographic\",\n      style: {\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/echarts/pie/index.js"],"names":["React","echarts","ReactEcharts","echartsTheme","Pie","Component","getOption","option","title","text","x","legend","data","orient","right","top","bottom","tooltip","trigger","formatter","series","name","type","value","getOption2","radius","getOption3","roseType","sort","a","b","componentWillMount","registerTheme","render","height","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Card} from 'antd'\n// 按需加载\nimport echarts from 'echarts/lib/echarts'\n// 导入柱形图\nimport 'echarts/lib/chart/bar'\n// 引入提示框和标题组件\nimport 'echarts/lib/component/tooltip'\nimport 'echarts/lib/component/title'\nimport 'echarts/lib/component/legend'\nimport 'echarts/lib/component/markPoint'\nimport ReactEcharts from 'echarts-for-react'\nimport echartsTheme from '../echartsTheme'\n\nexport default class Pie extends React.Component{\n\n    componentWillMount(){\n        // 这里使用官方主题所以option里面不要再配置color\n        echarts.registerTheme('infographic', echartsTheme);\n    }\n\n\n    getOption = ()=>{\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            // 副标题\n            legend: {\n                // 这里的data和series的data数据项的name关联起来才会展示\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n                orient: 'vertical',\n                right: 10,\n                top: 50,\n                bottom: 20\n            },\n            // 鼠标放上去的提示\n            tooltip: {\n                trigger: 'item',\n                // 用以定义提示框的内容提示格式\n                formatter: '{a} </br>{b}: {c}({d}%)'\n            },\n\n            // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    data: [\n                        {\n                            name: 'Mon',\n                            value: 10,\n                        },\n                        {\n                            name: 'Tue',\n                            value: 20,\n                        },\n                        {\n                            name: 'Wed',\n                            value: 50,\n                        },\n                        {\n                            name: 'Thu',\n                            value: 80,\n                        },\n                        {\n                            name: 'Fri',\n                            value: 100,\n                        },\n                        {\n                            name: 'Sat',\n                            value: 100,\n                        },\n                        {\n                            name: 'Sun',\n                            value: 100,\n                        },\n                    ]\n                },\n            ]\n        }\n        return option\n    }\n    // 环形图\n    getOption2 = ()=>{\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                // 这里的data和series的data数据项的name关联起来才会展示\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n                orient: 'vertical',\n                right: 10,\n                top: 50,\n                bottom: 20\n            },\n            tooltip: {\n                trigger: 'item',\n                // 用以定义提示框的内容提示格式\n                formatter: '{a} </br>{b}: {c}{d}%）'\n            },\n\n            // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    // 内环半径，外环半径\n                    radius: ['50%', '80%'],\n                    data: [\n                        {\n                            name: 'Mon',\n                            value: 10,\n                        },\n                        {\n                            name: 'Tue',\n                            value: 20,\n                        },\n                        {\n                            name: 'Wed',\n                            value: 50,\n                        },\n                        {\n                            name: 'Thu',\n                            value: 80,\n                        },\n                        {\n                            name: 'Fri',\n                            value: 100,\n                        },\n                        {\n                            name: 'Sat',\n                            value: 100,\n                        },\n                        {\n                            name: 'Sun',\n                            value: 100,\n                        },\n                    ]\n                },\n            ]\n        }\n        return option\n    }\n    getOption3 = ()=>{\n        let option = {\n            title: {\n                text: '用户骑行订单',\n                x: 'center'\n            },\n            legend: {\n                // 这里的data和series的data数据项的name关联起来才会展示\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n                orient: 'vertical',\n                right: 10,\n                top: 50,\n                bottom: 20\n            },\n            tooltip: {\n                trigger: 'item',\n                // 用以定义提示框的内容提示格式\n                formatter: '{a} </br>{b}: {c}--{d}%'\n            },\n\n            // 数据：备注这个数据的data必须和x轴个数对应起来，y轴的刻度会自己计算的\n            series: [\n                {\n                    name: '订单量',\n                    type: 'pie',\n                    radius: '80%',\n                    roseType: 'radius',\n                    data: [\n                        {\n                            name: 'Mon',\n                            value: 10,\n                        },\n                        {\n                            name: 'Tue',\n                            value: 20,\n                        },\n                        {\n                            name: 'Wed',\n                            value: 50,\n                        },\n                        {\n                            name: 'Thu',\n                            value: 80,\n                        },\n                        {\n                            name: 'Fri',\n                            value: 100,\n                        },\n                        {\n                            name: 'Sat',\n                            value: 100,\n                        },\n                        {\n                            name: 'Sun',\n                            value: 60,\n                        },\n                    ].sort((a, b) => a.value-b.value)\n                },\n            ]\n        }\n        return option\n    }\n\n    \n    \n    render(){\n        return(\n        <div>\n            <Card title=\"饼图一\" >\n                {/*  theme：infographic关联导入的 echarts.registerTheme('infographic', echartsTheme);*/}\n                <ReactEcharts option={this.getOption()} theme=\"infographic\" style={{height: 500}}/>\n            </Card>\n            <Card title=\"饼图二\" style={{ marginTop: 10 }}>\n                <ReactEcharts option={this.getOption2()} theme=\"infographic\" style={{height: 500}}/>\n            </Card>\n            <Card title=\"饼图三\" style={{ marginTop: 10 }}>\n                <ReactEcharts option={this.getOption3()} theme=\"infographic\" style={{height: 500}}/>\n            </Card>\n        </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}