{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport \"antd/lib/checkbox/style\";\nimport _Checkbox from \"antd/lib/checkbox\";\nimport \"antd/lib/upload/style\";\nimport _Upload from \"antd/lib/upload\";\nimport \"antd/lib/time-picker/style\";\nimport _TimePicker from \"antd/lib/time-picker\";\nimport \"antd/lib/date-picker/style\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport \"antd/lib/switch/style\";\nimport _Switch from \"antd/lib/switch\";\nimport \"antd/lib/input-number/style\";\nimport _InputNumber from \"antd/lib/input-number\";\nimport \"antd/lib/icon/style\";\nimport _Icon from \"antd/lib/icon\";\nimport \"antd/lib/message/style\";\nimport _message from \"antd/lib/message\";\nimport \"antd/lib/input/style\";\nimport _Input from \"antd/lib/input\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/form/regisitor.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nconst FormItem = _Form.Item;\nconst RadioGroup = _Radio.Group;\nconst Option = _Select.Option;\nconst TextArea = _Input.TextArea;\n\nclass Registor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let userInfo = this.props.form.getFieldsValue();\n      console.log(JSON.stringify(userInfo));\n    };\n\n    this.getBase64 = (img, callback) => {\n      const reader = new FileReader();\n      reader.addEventListener('load', () => callback(reader.result));\n      reader.readAsDataURL(img);\n    };\n\n    this.beforeUpload = file => {\n      const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n\n      if (!isJpgOrPng) {\n        _message.error('You can only upload JPG/PNG file!');\n      }\n\n      const isLt2M = file.size / 1024 / 1024 < 2;\n\n      if (!isLt2M) {\n        _message.error('Image must smaller than 2MB!');\n      }\n\n      return isJpgOrPng && isLt2M;\n    };\n\n    this.handleUpload = info => {\n      if (info.file.status === 'uploading') {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === 'done') {\n        // Get this url from response in real world.\n        this.getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n  }\n\n  render() {\n    const {\n      getFieldDecorator\n    } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: 24,\n        sm: 4\n      },\n      wrapperCol: {\n        xs: 24,\n        sm: 20\n      }\n    };\n    const offsetLayout = {\n      wrapperCol: {\n        xs: 24,\n        sm: {\n          span: 20,\n          offset: 4\n        }\n      }\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      title: \"\\u6CE8\\u518C\\u8868\\u5355\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_Form, {\n      layout: \"horizontal\",\n      style: {\n        width: 800\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u7528\\u6237\\u540D\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('username', {\n      initialValue: 'xiaomei',\n      rules: [{\n        required: true,\n        message: 'Please input your username!'\n      }, {\n        min: 5,\n        max: 10,\n        message: \"长度不在范围内\"\n      }]\n    })( /*#__PURE__*/React.createElement(_Input, {\n      prefix: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 45\n        }\n      }),\n      placeholder: \"Username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u5BC6\\u7801\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Input, {\n      prefix: /*#__PURE__*/React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 45\n        }\n      }),\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u6027\\u522B\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('sex', {\n      initialValue: 1,\n      rules: [{\n        required: true,\n        message: 'Please input your sex!'\n      }]\n    })( /*#__PURE__*/React.createElement(RadioGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(_Radio, {\n      value: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, \"\\u7537\"), /*#__PURE__*/React.createElement(_Radio, {\n      value: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 37\n      }\n    }, \"\\u5973\")))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u5E74\\u9F84\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('age', {\n      initialValue: 18,\n      rules: [{\n        required: true,\n        message: 'Please input your age!'\n      }]\n    })( /*#__PURE__*/React.createElement(_InputNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u5F53\\u524D\\u72B6\\u6001\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('state', {\n      initialValue: '1',\n      rules: [{\n        required: true,\n        message: 'Please input your age!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Select, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, \"\\u5CB3\\u4E0D\\u7FA4\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, \"\\u4E1C\\u65B9\\u4E0D\\u8D25\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 37\n      }\n    }, \"\\u9E20\\u6469\\u667A\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 37\n      }\n    }, \"\\u4EFB\\u6211\\u884C\")))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u7231\\u597D\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('interest', {\n      initialValue: ['1', '2'],\n      rules: [{\n        required: true,\n        message: 'Please input your age!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Select, {\n      mode: \"multiple\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }, \"\\u6E38\\u6CF3\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 37\n      }\n    }, \"\\u8DD1\\u6B65\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    }, \"\\u5531\\u6B4C\"), /*#__PURE__*/React.createElement(Option, {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, \"\\u5409\\u4ED6\")))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u662F\\u5426\\u5DF2\\u5A5A\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('isMarried', {\n      initialValue: true,\n      // valuePropName 设置Switch的 默认属性值后 initialValue: true才会生效\n      valuePropName: 'checked',\n      rules: [{\n        required: true,\n        message: 'Please input your age!'\n      }]\n    })( /*#__PURE__*/React.createElement(_Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u751F\\u65E5\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('birthday', {\n      initialValue: moment('2020-02-02', 'YYYY-MM-DD')\n    })( /*#__PURE__*/React.createElement(_DatePicker, {\n      showTime: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u65E9\\u8D77\\u65F6\\u95F4\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('time', {\n      initialValue: moment('00:00:00', 'HH:mm:ss')\n    })( /*#__PURE__*/React.createElement(_TimePicker, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u5730\\u5740\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('address', {\n      initialValue: \"\"\n    })( /*#__PURE__*/React.createElement(TextArea, {\n      placeholder: \"\\u5317\\u4EAC\\u5E02\\u6D77\\u6DC0\\u533A\",\n      autoSize: {\n        minRows: 2,\n        maxRows: 6\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u5934\\u50CF\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('userImg', {\n      initialValue: ''\n    })( /*#__PURE__*/React.createElement(_Upload, {\n      className: \"avatar-upload\",\n      listType: \"picture-card\",\n      showUploadList: false,\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n      beforeUpload: this.beforeUpload,\n      onChange: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 33\n      }\n    }, this.state.imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.imageUrl,\n      alt: \"avatar\",\n      style: {\n        width: 100,\n        height: 100\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 60\n      }\n    }) : /*#__PURE__*/React.createElement(_Icon, {\n      type: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 142\n      }\n    })))), /*#__PURE__*/React.createElement(FormItem, Object.assign({}, offsetLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }), getFieldDecorator('remember', {})( /*#__PURE__*/React.createElement(_Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 32\n      }\n    }, \"\\u6211\\u5DF2\\u9605\\u8BFB \", /*#__PURE__*/React.createElement(\"a\", {\n      className: \"login-form-forgot\",\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 47\n      }\n    }, \"\\u4E5D\\u9634\\u771F\\u7ECF\")))), /*#__PURE__*/React.createElement(FormItem, Object.assign({}, offsetLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 29\n      }\n    }, \"login\")))));\n  }\n\n} // 只有使用了Form.create({})(xxx)才可以在this.props.form中获取到表单的相关数据\n\n\nexport default _Form.create({})(Registor);\n;\n/* const formItemLayout = {\n    labelCol: {\n        xs: 24,\n        sm: 4\n    },\n    wrapperCol: {\n        xs: 24,\n        sm: 20\n    }\n};\n\nconst offsetLayout = {\n    wrapperCol: {\n        xs: 24,\n        sm: {\n            span: 20,\n            offset: 4\n        }\n    }\n};\n解析如下：\nlabelCol: { xs: 24, sm: 4 } ：表示左边的label在响应式布局中 当分辨率小于xs指定的值时，左边的label占24列即单独占一行，分辨率大于sm分辨率时，左边的label占4列\nwrapperCol: { xs: 24, sm: 20 }：表示右边的表单控件\n\n\n\noffsetLayout下的wrapperCol在上述代码中的表示将指定的控件从左向右偏移4\n*/","map":{"version":3,"sources":["/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/form/regisitor.js"],"names":["React","Component","moment","FormItem","Item","RadioGroup","Group","Option","TextArea","Registor","state","handleSubmit","e","preventDefault","userInfo","props","form","getFieldsValue","console","log","JSON","stringify","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","handleUpload","info","status","setState","loading","originFileObj","imageUrl","render","getFieldDecorator","formItemLayout","labelCol","xs","sm","wrapperCol","offsetLayout","span","offset","width","initialValue","rules","required","message","min","max","color","valuePropName","minRows","maxRows","height","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Icon, Form, Input, Button, message, Checkbox, Radio, InputNumber,\nSelect, Switch, DatePicker, TimePicker, Upload } from 'antd';\n\nimport moment from 'moment';\nconst FormItem = Form.Item;\nconst RadioGroup = Radio.Group;\nconst Option = Select.Option;\nconst TextArea = Input.TextArea;\n\n\nclass Registor extends Component {\n    state = {};\n    handleSubmit = (e) => {\n        e.preventDefault();\n        let userInfo = this.props.form.getFieldsValue();\n        console.log(JSON.stringify(userInfo));\n\n    }\n    \n    getBase64 = (img, callback) => {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n      }\n\n    beforeUpload = file => {\n        const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n        if (!isJpgOrPng) {\n          message.error('You can only upload JPG/PNG file!');\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n          message.error('Image must smaller than 2MB!');\n        }\n        return isJpgOrPng && isLt2M;\n    }\n    handleUpload = info => {\n        if (info.file.status === 'uploading') {\n          this.setState({ loading: true });\n          return;\n        }\n        if (info.file.status === 'done') {\n          // Get this url from response in real world.\n          this.getBase64(info.file.originFileObj, imageUrl =>\n            this.setState({\n              imageUrl,\n              loading: false,\n            }),\n          );\n        }\n      };\n    render() {\n        const { getFieldDecorator } = this.props.form;\n        const formItemLayout = {\n            labelCol: {\n                xs: 24,\n                sm: 4\n            },\n            wrapperCol: {\n                xs: 24,\n                sm: 20\n            }\n        };\n\n        const offsetLayout = {\n            wrapperCol: {\n                xs: 24,\n                sm: {\n                    span: 20,\n                    offset: 4\n                }\n            }\n        };\n\n        return (\n            <div>\n                <Card title=\"注册表单\">\n                    <Form layout=\"horizontal\"  style={{width: 800}}>\n                        <FormItem label=\"用户名\" {...formItemLayout}>\n                            {getFieldDecorator('username', {\n                                initialValue: 'xiaomei',\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!',\n                                    }, {\n                                        min: 5,\n                                        max: 10,\n                                        message: \"长度不在范围内\"\n                                    }\n                                ],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Username\"\n                                />,\n                            )}\n                        </FormItem>\n                        <FormItem label=\"密码\" {...formItemLayout}>\n                            {getFieldDecorator('password', {\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your password!'\n                                }],\n                            })(\n                                <Input\n                                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder=\"Password\"\n                                />,\n                            )}\n                        </FormItem>\n                        <FormItem label=\"性别\" {...formItemLayout}>\n                            {getFieldDecorator('sex', {\n                                initialValue: 1,\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your sex!'\n                                }],\n                            })(\n\n                                <RadioGroup >\n                                    {/* 默认值通过 getFieldDecorator 的 initialValue设置*/}\n                                    <Radio value={1}>男</Radio>\n                                    <Radio value={2}>女</Radio>\n                                </RadioGroup>\n                            )}\n\n                        </FormItem>\n                        <FormItem label=\"年龄\" {...formItemLayout}>\n                            {getFieldDecorator('age', {\n                                initialValue: 18,\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your age!'\n                                }],\n                            })(\n                                <InputNumber />\n                            )}\n\n                        </FormItem>\n                        <FormItem label=\"当前状态\" {...formItemLayout}>\n                            {getFieldDecorator('state', {\n                                initialValue: '1',\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your age!'\n                                }],\n                            })(\n                                <Select>\n                                    <Option value=\"1\">岳不群</Option>\n                                    <Option value=\"2\">东方不败</Option>\n                                    <Option value=\"3\">鸠摩智</Option>\n                                    <Option value=\"4\">任我行</Option>\n                                </Select>\n                            )}\n\n                        </FormItem>\n                        <FormItem label=\"爱好\" {...formItemLayout}>\n                            {getFieldDecorator('interest', {\n                                initialValue: ['1', '2'],\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your age!'\n                                }],\n                            })(\n                                <Select mode=\"multiple\">\n                                    <Option value=\"1\">游泳</Option>\n                                    <Option value=\"2\">跑步</Option>\n                                    <Option value=\"3\">唱歌</Option>\n                                    <Option value=\"4\">吉他</Option>\n                                </Select>\n                            )}\n                        </FormItem>\n\n                        <FormItem label=\"是否已婚\" {...formItemLayout}>\n                            {getFieldDecorator('isMarried', {\n                                initialValue: true,\n                                // valuePropName 设置Switch的 默认属性值后 initialValue: true才会生效\n                                valuePropName: 'checked',\n                                rules: [{\n                                    required: true,\n                                    message: 'Please input your age!'\n                                }],\n                            })(\n                                <Switch />\n                            )}\n                        </FormItem>\n                        <FormItem label=\"生日\" {...formItemLayout}>\n                            {getFieldDecorator('birthday', {\n                                initialValue: moment('2020-02-02', 'YYYY-MM-DD'),\n                            })(\n                                <DatePicker showTime/>\n                            )}\n                        </FormItem>\n\n                        <FormItem label=\"早起时间\" {...formItemLayout}>\n                            {getFieldDecorator('time', {\n                                initialValue: moment('00:00:00', 'HH:mm:ss'),\n                            })(\n                                <TimePicker />\n                            )}\n                        </FormItem>\n                        <FormItem label=\"地址\" {...formItemLayout}>\n                            {getFieldDecorator('address', {\n                                initialValue: \"\",\n                            })(\n                                <TextArea\n                                    placeholder = \"北京市海淀区\"\n                                    autoSize = {{ minRows: 2, maxRows: 6 }}\n                                />\n                            )}\n                        </FormItem>\n                        <FormItem label=\"头像\" {...formItemLayout}>\n                            {getFieldDecorator('userImg', {\n                                initialValue: '',\n                            })(\n                                <Upload\n                                    className=\"avatar-upload\"\n                                    listType=\"picture-card\"\n                                    showUploadList={false}\n                                    action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n                                    beforeUpload={this.beforeUpload}\n                                    onChange={this.handleUpload}\n                                >\n                                    {this.state.imageUrl ? <img src={this.state.imageUrl} alt=\"avatar\" style={{width: 100, height: 100}}/> : <Icon type=\"plus\"/>}\n                                </Upload>\n                            )}\n                        </FormItem>\n                        \n                        <FormItem {...offsetLayout}>\n                            {getFieldDecorator('remember', {\n                            })(<Checkbox>我已阅读 <a className=\"login-form-forgot\" href=\"\">九阴真经</a></Checkbox>)}\n                        </FormItem>\n                        <FormItem {...offsetLayout}>\n                            <Button type=\"primary\" onClick={this.handleSubmit} >login</Button>\n                        </FormItem>\n\n                    </Form>\n                </Card>\n\n            </div>\n        );\n    }\n}\n// 只有使用了Form.create({})(xxx)才可以在this.props.form中获取到表单的相关数据\nexport default Form.create({})(Registor);;\n\n\n/* const formItemLayout = {\n    labelCol: {\n        xs: 24,\n        sm: 4\n    },\n    wrapperCol: {\n        xs: 24,\n        sm: 20\n    }\n};\n\nconst offsetLayout = {\n    wrapperCol: {\n        xs: 24,\n        sm: {\n            span: 20,\n            offset: 4\n        }\n    }\n};\n解析如下：\nlabelCol: { xs: 24, sm: 4 } ：表示左边的label在响应式布局中 当分辨率小于xs指定的值时，左边的label占24列即单独占一行，分辨率大于sm分辨率时，左边的label占4列\nwrapperCol: { xs: 24, sm: 20 }：表示右边的表单控件\n\n\n\noffsetLayout下的wrapperCol在上述代码中的表示将指定的控件从左向右偏移4\n*/\n\n"]},"metadata":{},"sourceType":"module"}