{"ast":null,"code":"import \"antd/lib/card/style\";\nimport _Card from \"antd/lib/card\";\nimport \"antd/lib/radio/style\";\nimport _Radio from \"antd/lib/radio\";\nimport \"antd/lib/select/style\";\nimport _Select from \"antd/lib/select\";\nimport \"antd/lib/form/style\";\nimport _Form from \"antd/lib/form\";\nvar _jsxFileName = \"/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/bikeMap/index.js\";\nimport React from 'react';\nimport Axios from '../../axios/index';\nimport Utils from '../../utils/utils';\nimport BaseForm from '../../components/BaseForm';\nimport BaseTable from '../../components/BaseTable';\nimport TextArea from 'antd/lib/input/TextArea';\nimport moment from 'moment';\nconst FormItem = _Form.Item;\nconst Option = _Select.Option;\nconst RadioGroup = _Radio.Group;\nexport default class BikeMap extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.params = {};\n    this.formList = [{\n      type: 'SELECT',\n      label: '城市',\n      field: 'city',\n      placeholder: '全部',\n      initialValue: '0',\n      width: 80,\n      list: [{\n        id: '0',\n        name: '全部'\n      }, {\n        id: '1',\n        name: '北京'\n      }, {\n        id: '2',\n        name: '天津'\n      }, {\n        id: '3',\n        name: '深圳'\n      }]\n    }, {\n      type: '时间查询'\n    }, {\n      type: 'SELECT',\n      label: '订单状态',\n      field: 'orderStatus',\n      placeholder: '全部',\n      initialValue: '0',\n      width: 80,\n      list: [{\n        id: '0',\n        name: '全部'\n      }, {\n        id: '1',\n        name: '进行中'\n      }, {\n        id: '2',\n        name: '行程结束'\n      }]\n    }];\n\n    this.requestList = () => {\n      Axios.ajax({\n        url: '/map/bikeList',\n        data: {\n          params: this.params\n        }\n      }).then(res => {\n        this.setState({\n          totalCount: res.result.totalCount\n        });\n        this.renderMap(res);\n      });\n    };\n\n    this.renderMap = res => {\n      let routerList = res.result.routerList;\n      this.map = new window.BMapGL.Map(\"container\");\n      let gps1 = routerList[0].split(',');\n      let gps2 = routerList[routerList.length - 1].split(','); // 绘制起始点和结束点\n\n      let startPoint = new window.BMapGL.Point(gps1[0], gps1[1]);\n      let endPoint = new window.BMapGL.Point(gps2[0], gps2[1]);\n      let startMarker = new window.BMapGL.Marker(startPoint);\n      let endMarker = new window.BMapGL.Marker(endPoint);\n      this.map.addOverlay(startMarker);\n      this.map.addOverlay(endMarker);\n      this.map.centerAndZoom(endPoint, 11); // 绘制车辆行驶路线\n\n      let trackPoints = routerList.map(item => {\n        let temp = item.split(',');\n        let trackPoint = new window.BMapGL.Point(temp[0], temp[1]);\n        return trackPoint;\n      });\n      var polyline = new window.BMapGL.Polyline(trackPoints, {\n        strokeColor: \"#ef4136\",\n        strokeWeight: 2,\n        strokeOpacity: 1\n      });\n      this.map.addOverlay(polyline); // 绘制服务区\n\n      let serviceList = res.result.serviceList;\n      let servicePointList = [];\n      serviceList.forEach(item => {\n        servicePointList.push(new window.BMapGL.Point(item.lon, item.lat));\n      });\n      var servicePolyline = new window.BMapGL.Polyline(servicePointList, {\n        strokeColor: \"#ef4136\",\n        strokeWeight: 3,\n        strokeOpacity: 1\n      });\n      this.map.addOverlay(servicePolyline); // 添加自行车分布点\n\n      let bikeList = res.result.bikeList;\n      bikeList.forEach(item => {\n        let temp = item.split(\",\");\n        let point = new window.BMapGL.Point(temp[0], temp[1]);\n        let bikeMarker = new window.BMapGL.Marker(point);\n        this.map.addOverlay(bikeMarker);\n      });\n    };\n\n    this.handleFilter = params => {\n      this.params = params;\n      this.requestList();\n    };\n  }\n\n  componentDidMount() {\n    this.requestList();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BaseForm, {\n      formList: this.formList,\n      filterSubmit: this.handleFilter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(_Card, {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, \"\\u5171\", this.state.totalCount, \"\\u8F86\\u8F66\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"container\",\n      style: {\n        height: 500\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/xumeihong/Documents/code/git/react/demos/demo2/src/pages/bikeMap/index.js"],"names":["React","Axios","Utils","BaseForm","BaseTable","TextArea","moment","FormItem","Item","Option","RadioGroup","Group","BikeMap","Component","state","params","formList","type","label","field","placeholder","initialValue","width","list","id","name","requestList","ajax","url","data","then","res","setState","totalCount","result","renderMap","routerList","map","window","BMapGL","Map","gps1","split","gps2","length","startPoint","Point","endPoint","startMarker","Marker","endMarker","addOverlay","centerAndZoom","trackPoints","item","temp","trackPoint","polyline","Polyline","strokeColor","strokeWeight","strokeOpacity","serviceList","servicePointList","forEach","push","lon","lat","servicePolyline","bikeList","point","bikeMarker","handleFilter","componentDidMount","render","marginTop","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Card, Button, Select, Table, Modal, Radio, message, DatePicker, Icon, Input } from 'antd';\nimport Axios from '../../axios/index';\nimport Utils from '../../utils/utils';\nimport BaseForm from '../../components/BaseForm';\nimport BaseTable from '../../components/BaseTable';\nimport TextArea from 'antd/lib/input/TextArea';\nimport moment from 'moment';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst RadioGroup = Radio.Group;\n\n\nexport default class BikeMap extends React.Component {\n    state = {};\n    params = {};\n    formList = [\n        {\n            type: 'SELECT',\n            label: '城市',\n            field: 'city',\n            placeholder: '全部',\n            initialValue: '0',\n            width: 80,\n            list: [{ id: '0', name: '全部' }, { id: '1', name: '北京' }, { id: '2', name: '天津' }, { id: '3', name: '深圳' }]\n        },\n        {\n            type: '时间查询'\n        },\n        {\n            type: 'SELECT',\n            label: '订单状态',\n            field: 'orderStatus',\n            placeholder: '全部',\n            initialValue: '0',\n            width: 80,\n            list: [{ id: '0', name: '全部' }, { id: '1', name: '进行中' }, { id: '2', name: '行程结束' }]\n        },\n    ];\n\n    componentDidMount() {\n        this.requestList();\n    }\n\n    requestList = () => {\n        Axios.ajax({\n            url: '/map/bikeList',\n            data: {\n                params: this.params\n            }\n        }).then(res => {\n            this.setState({\n                totalCount: res.result.totalCount\n            });\n            this.renderMap(res);\n        });\n    }\n\n    renderMap = (res) => {\n        let routerList = res.result.routerList;\n        this.map = new window.BMapGL.Map(\"container\");\n        let gps1 = routerList[0].split(',');\n        let gps2 = routerList[routerList.length - 1].split(',');\n\n        // 绘制起始点和结束点\n        let startPoint = new window.BMapGL.Point(gps1[0], gps1[1]);\n        let endPoint = new window.BMapGL.Point(gps2[0], gps2[1]);\n        let startMarker = new window.BMapGL.Marker(startPoint);\n        let endMarker = new window.BMapGL.Marker(endPoint);\n        this.map.addOverlay(startMarker);\n        this.map.addOverlay(endMarker);\n        this.map.centerAndZoom(endPoint, 11);\n\n        // 绘制车辆行驶路线\n        let trackPoints = routerList.map(item => {\n            let temp = item.split(',');\n            let trackPoint = new window.BMapGL.Point(temp[0], temp[1]);\n            return trackPoint;\n        })\n        var polyline = new window.BMapGL.Polyline(trackPoints, { strokeColor: \"#ef4136\", strokeWeight: 2, strokeOpacity: 1 });\n        this.map.addOverlay(polyline);\n\n        // 绘制服务区\n        let serviceList = res.result.serviceList;\n        let servicePointList = [];\n        serviceList.forEach(item => {\n            servicePointList.push(new window.BMapGL.Point(item.lon, item.lat));\n        })\n\n        var servicePolyline = new window.BMapGL.Polyline(servicePointList, { strokeColor: \"#ef4136\", strokeWeight: 3, strokeOpacity: 1 });\n        this.map.addOverlay(servicePolyline);\n\n        // 添加自行车分布点\n        let bikeList = res.result.bikeList;\n\n        bikeList.forEach(item => {\n            let temp = item.split(\",\");\n            let point = new window.BMapGL.Point(temp[0], temp[1]);\n            let bikeMarker = new window.BMapGL.Marker(point);\n            this.map.addOverlay(bikeMarker);\n        })\n    }\n\n    handleFilter = (params) => {\n        this.params = params;\n        this.requestList();\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <Card>\n                    <BaseForm formList={this.formList} filterSubmit={this.handleFilter} />\n                </Card>\n                <Card style={{ marginTop: 10 }}>\n                    <div>共{this.state.totalCount}辆车</div>\n                    <div id=\"container\" style={{ height: 500 }}></div>\n                </Card>\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}